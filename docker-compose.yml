services:
  app:
    image: vedrouniverse/vedro-telemetry-api:0.1.0
    restart: unless-stopped
    environment:
      - TZ=UTC
      - DB_DSN=postgresql://vedro_telemetry:vedro_telemetry@db:5432/vedro_telemetry
    ports:
      - "8080:80"
    volumes:
      - migrations:/app/migrations
    healthcheck:
      test: "wget -q -O - http://127.0.0.1:80/healthcheck"
      interval: 3s
      timeout: 5s
      retries: 10
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15.8-alpine
    restart: unless-stopped
    environment:
      - TZ=UTC
      - POSTGRES_USER=vedro_telemetry
      - POSTGRES_PASSWORD=vedro_telemetry
      - POSTGRES_DB=vedro_telemetry
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - "6432:5432"
    healthcheck:
      test: "pg_isready -U vedro_telemetry"
      interval: 3s
      timeout: 5s
      retries: 10

  migrations:
    image: gomicro/goose:3.7.0
    command: goose postgres up
    environment:
      - GOOSE_DBSTRING=postgresql://vedro_telemetry:vedro_telemetry@db:5432/vedro_telemetry
    volumes:
      - migrations:/migrations
    depends_on:
      app:
        condition: service_healthy
      db:
        condition: service_healthy

  grafana:
    image: grafana/grafana:11.2.2
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_INSTALL_PLUGINS=marcusolsson-json-datasource

volumes:
  migrations:
